<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdguardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAEuBJREFUaEPF
        Wnd8lFW6Flx3KYFAEtJJaIGEdErovddAaAGGIsUFC95rWa9X77p3URYrIKCAuiKKFbsiNgIBIwgGJAkQ
        SJlMkplMzWQmvfDc5z2TL4uace9fu8Hnd8p3yvO873vec5KftwBQiIyMiLrzngcOrd1472trN2w5uGb9
        PQf/8tdtB3ft3nPw+d17/8XYc/DpZ3cevGPzfQc1LoLV6+5664EHHpymcRa0VZKGpKxad8e9WLB4FRYv
        ux1LV2xAmdHKT/+eH6e7Dvf96TGsXLMZurV3YsXqTaAILFq66ig//1pAUHCYbvb8dMQljlCQutlqQ/ON
        G/z8r/9xOGvwx7sewMIla7E4fR3Slq7FkuXrkZA8un0BwaG9dfPTdFi7fgtWr7sbc1KXw1HpQsu/QYDs
        6HTX4M4tD1HAGixiRKiSQoYMH+vFAyEeARs3348Nm+7H3AUr4KqpQxNXc1RVwe6sZVkDq7MaVrsbdns1
        KqXucrFeC6ejEpUuNyorneyrhtlRBaerBnbpY93OPnulg30uWG0u2KrccFa64aqSdV2odFfBxbazugbu
        2nqiDnf/x8MQTkJ+weLVSkjy0DHeBcxbqMO8hSsVeUFtTT3qG2+gsaURLc3NaLhBNAHNLU1obGrCjZZm
        NLNslDE3Wlg2g0NVvam5CQ3NMvcG+1rQwLGNjU1oku9NUhdwTovMkzW4tnxvakEz51bTeCJA+Aj51EWr
        sJBhlDzMmweCw3VCWkJHQ31dI0EC3FxC6QYJQSv5c0PCq0Vc7vmn/hPCqsIekpMx6pv0qjoNoFosZT7X
        EuNwGjtlrxbiBj3QgLvufVidRfGCJiTJmwcCg0LVIZ41b5maNHs+BdBcDoZJYbkdJrMTJUY79CYHyswW
        lNjtuG5gu8yIkjILCg1m6CsqYTBVoNhQgesWGwzsLyu1oNzI/jI7zOVWGC2VKDXbUWZxwMy6yW6D0e5E
        hY19Die/M8wYRq7aWp6B/1J8tKgQIYlDvBziwKAwnQyeMWcJZs5dqiY20AN2dwvPQg2qXLWoqamFy1XH
        OK5FI/urqun+pga42V9XXws3U5+7juehrg711Rzvqmco1KJKzeMaNS3qXLjc7CNJWaeK61Wxz826p12D
        OlrfwXLzPQ8pLhINYtS5FJKQPMq7ABk8ffZiJWLGnKVorKcHeHDruGFNcwOaSa6ai7tJtqGORIimBpIk
        cTkTLjdjl4evoaGFJUnXNMEpY6sb2SZJEcvsUl3dhBpC+qo41yViqvmNokVgVV0DzE43Nt39J8VHjKkJ
        +Q0BoTohPm3WIgWZKGfAxIyjLypHabkNRQUOFDMkDAYbivVW5DO0Sq/ZUVRmRUG5BXo9w0VvwzV9BUoY
        XkbOKS93cLyVYcOQYiiVljkYig6GlYMhZ1ehVV7BdoUVZeUMNXMlLPYqGJmp7rjzAUydmabIC7dZ89IR
        nzSyfQG9AkN102YtxpQZC9UkEVHLrGCy1TI+GaPWalQwVi2M0worU6XbCTP7HaybVV8VbM4qjnHDbHdx
        XBWJSH8NL0Tp98yrlPEq5j3zrVpb1mZdxkiKNfC8bdh8n+IjxhQ+IiQ2frgXAfTAVA6ePH0BJk1LVRPr
        GxtQyoXNtkrm7nqSdsNR3Qyn0wm7ow4mEnbQ7WZeeFbm80oSt4pYkjdWVitCQk6I2qXfxn4h6+Q9YGE/
        x4lYk4X91kqimvVKru1CAQWs3/SfiouQV0Jo4NgELwIC6AEhP3HqfIUprNfVN6Cw2IqfLl5HdrYB5y4W
        4kxuEb7LKcbFaz/hfL4Bly6W4MfcApzLLUZOXhFyLpch50ohcnLLcJnj8grKcPEK+66W4NI1A3LyS/GT
        ahfjcn45ctnOyStB3tUyji1HzvVS6BmOBSVm3L7xXkyYMk+RF24SGYPjh3kXMInEJ0yeqyAi6hsbUUxL
        mCwWlfoMJgvMfODpaVlxsQJjt7SiivErKdWCYo4p55mQ1KqvsLGffayXsk/KYplvsrPOefLNyJQs50eN
        8YytsDqQX2RTj7dxk+ZAeCmjUkh07BAvAnqF6CZMnofxnCAQEY0igIvbecXbGEKSGew2B0yMebONzwiG
        QKmbLpdDR1FWZyVsdgeMTgfPAMOBRI1WN8rNnCPngEYwWkQ0Dy3Hyt1iYd438v4oFaMwfORAmxlil4sq
        1Jts7IRZist4YtLUVAwa7EWAf0CQbtzEOWqCQEQ01TcjnxbJPJOP0xfy8d25fGRlX0XWT4XIOpeHMxeu
        4fwPhTh/4TLOnC3EufMFyMwuxA8XC3Dq4hV8x3lnLuqRxdD7/sIVnOb3c9lFDMV8nPrxGs6eL2Q4XsW5
        nOs4k1OE7Bx+Z9hdKzbhit6sntGjx81Q5MdNnI2JDKfowcnePBCsG0PiMkEgIur58Kngo01fyrSowoKg
        R8qZHiVESiRsGDJ63rDyTWJXvqvwaS0NLCU8JJRUqGj9NkLGMS3rS+2eOQKDrG/FFZ4B+R1g1Njpirxm
        1EExXgT4BwTrRo+biZFjpqlJY8bP5CHmPVDRgGtGE58PzNfGKhQzHMqsVoYBz4apkr/02GBhXBuY542M
        +VKrCxUmZiCGitEs2cgJE8+K1c50yrkWB8PQbIW1sgpWzq+oZlaq4lpGJ4rMZhQZK1DBULpcbEG67g6M
        GD1VcRGjioGjohPbF+DnH6QbOWa6miAQETW8dQv4rvk6MwenvstGZlYuvvkhDxlnc3Ai6zK+/T4b37L9
        zZlcnMzKQ+Z3P+Hk2Tx8lXUJR89cwNETROaPOHb6B3x4MhsfZZ7BBycv4Yvj2fjsm2wczTiHYxk5+Dzr
        Ar7JyMbXP+Qi8/sc5F0rweVCC5at3IjhIycrLmJYETFgUII3AYE6IT5sxGSkcFLKqMm81qthpEWvFpaj
        vNSBwlIbChkqRSyLS5hV9LyF6eoS3swSRsUsyyU8ePMWS+biWFNZFQ+rlYeTh9zCnM+5kqX05mqU0qNl
        pfQeQ9LEUCrhg9DAG9zE++LSdaN6/w8bMUkZNGXUFIqYjgED49sX0NMvUCdqZYJgyPAJJMXrn5dYGcOl
        xMSr3sTXopVxT3cb2S63S3rlGIaGkU8DE1+q5TYbLyxeSmY3w89J4sw2NjfDgsRJWsKvwlYDAzOXXHgm
        p/TXqXUrmJEkY10tNiK3xKJ+kREeQl4T0i8qzruAoYr4eDUpPmkUHt26A+cv63EppwTnrxbhQm4JzuUV
        42yOHudZP3ulGD/m6XHuKi+5XGYhXnIXmEUuXCvFj1dKkC0XHd9Rl/lGus6sUkDRhXz7FBMF5S6eLSeu
        8xxcpffy6c1rBXbk6o24TK8ePnJMxfxQchHyQ1MmqrLvgFhvAnrpkoeNR+LQsfylYRx/8xmPuISRVD0F
        o8ZNx+jxcrBnMCPM4uXCjDCZd8WUubwh5apP42PL82qck8pnr7zd+fRN5ft9fprnLa+exK3PdXnbyLNl
        0jS5OOdwPWYZrjt2wky1x2giSfEYq4iLQYWPGLhv/8HtC+jRM0CXOHQMEoaM4S8NHhGyQHzSaPb9Q5Qs
        KJBwE9dqB15lCWYLSXeS9rQLUTC2NQ1q2UQdSkKLbVlLEeX6ycM8+yaxlP2k9HBhm9ER2S/GiwB6ID55
        NOKSRiI+eZT8+YJCxvxjcuuCYo2hKQKPEIF2bn4LvzVOkee6GhRx7inRIBzEqAlDyIftyH7R3j0QmzgS
        gxNSECt/G9KEcKLyiixGDI4fgZi4FMSwjE0YhbhED8RT8UncKFk2HddaeuoeMkRrf0LyGDU+LlHA+awP
        TfEIESsLxPKyH9//iovGJ6LPwPYF+Pbw18XEDyexVlDIzWLieKjFQ7FxiQgODkVQcAiCQ8IQGhqO0LBw
        hIX1Rlg4wVLaHnjaqr/128++t86VtQKDw9ErKAx8k8EvIAhMKnJgFQcNYuDwyChvAgJ00bHDMCh2KKLj
        hrUJ0SZHxw1Hd98eWL9+IzIzT+LUqUx88+23+JbIyDiBEydOsn5c4fusLPYdR8bx4zh+3DNGSoH0n8jI
        4PgMnDx5AqdPn8K6dRvondG8ZZMwcHAyomKSFPwCQkDDKiNGk9fg+BSERwxoX0B3X38dX3oYGJPsAesy
        KaZVjLS7de+BDz78EF9++SUFnMIfN9+DsMhBauMozhkQnajEv/rqQRw7dgyffPIJPv74YwWpf/rpp23l
        Z599hs8//xxffPEF3n7nXcb+eO7zc2uHRQzgnn5t+4uBw3r39y5AiAwYlKgISSlCRJQIkb5u3Xzx3ntH
        uOlRWjIDm+7cgn4DE9s2lbCTUHv5lb8rgh9S7AcffKBKgQj56KOPVF1KwaeffoLDh9/kORnT5n0pxXAk
        SwE9FQflnZghCA3v176Abr5+un4DExh3cbzt4tGfdU2MCJG6DwW88847ipyEg3ggsn+sJ+QIKcXdBw68
        pMi+//77SoBAyGp1TZSUMu6NNw7zYI/CwGiP58WbQjq0VYBw8PBJQkhYX+8C+g6IRx8SEvxSSF/Wfbp1
        52ZvKDJfffUVNt5xF9NarNpUNhTExA/Dnr0v4MiRI3j33XfpsfeUEGmL+F/ivffexSv0mPxF/GbvSxka
        3h8+FCAcFB+WQSERXgR076mL7DcYEX1jSGqwws1ChGhXn+547bXXFJmjR49i3YZNCO8TrTbTNuavfHj+
        +d0k/44SKzh8+DDefPPNtrqUr7/+Og4dOqT69+8/IH9taDOYBk2AcOAFpvgEhUS2L4ADdREkEx45EL37
        DGoVIohVYqTd1acbXnrpJUXg/fePYNWa9eoQa14SAhJuO3c9j7feekuRFMEahLBWyjeBCNq3b78SLgRl
        DUmfQjo4rC+93kMZR9aVfXoFhXsR0K2HLjwiigdnAE9/lBISTnK9KSqirwgbhC5du+HFF1/0eIGhoVu9
        DiHhA9RmGmSTZ559ro38wYMHmZVeZZi8gpdfflkZQEqB9Ml38dhAkvTs5TGclCKgq49vm4dFnH+vUG8C
        fHXisuCwfsp1oZqQCBEykO0odOnigxdeeEERe/vtt5C+YjUCQ/q1buoJOxGxffuTJP13RfLAgQNtEPJC
        WiuVAIrbyzWFoOZ9gdSDQvrQA55DLN75Jx7w1YWE9VeTgkP78rT3U9DEiLDOXbpiF8NDiImIRYvTKaBv
        m5dk4z79B+Pxx59QhEXsvn37FPbv369K6ROIJ6Uta+3evYchKDHvMZoGxrsSIJaXdn+O6RXUu30BdJVO
        yAcGRygRQRQhQjQx0te5c1fs3LlTkTt0yCMgICii1VNRSqiI+OvWx0l4H4ntZng8r8pdu3apuoY9e/Zg
        7969StiOnbvouVjPXjRYSLjHeIHcU0Iokh6WPcTTPf2C2hfA+NYJ+YBAeZP0JiIoJlJZQchLu1PnLnj6
        6afV5q/QcnPnp6GzTwB6+ocp+PqFcH4E/vznxxTJHTt2KOICqQvEABqkX0Q89fQzKu417wu0Pbt09VVt
        8XAQvd3TP7h9AR07dozyCwjWiwC/gFAeljAinIR6K0hdPPDEtr/hueeeUwT++5H/wV/+93FafBu2Pv43
        lk/giSe248knn8Kzzz6rIGOlFOGCZ555RkH7tnPnDmzjmhH0nOyjGU3IewR0V1w04/LN9msB/LmV6NKx
        46139fQPbJQJspgsFBzaR24/+PkHN9522++rSa5FrCsEpNy370W8qOJ6rye2CREn5DTyNwuRUjyhlRJe
        Irg3D61HgBCVvfswdAapNKqMSaNKP588X7cn4HdEMLG+Y4eOxzp39jF06tzVwPb3ROYtt3Q4zTKjU6dO
        n6emphYtWbJETxRrWLp0aVt92bJlxcuXL/8V0tPT28oVK1bc3KdPW7SoxM8/yMCXp0J3Xz/u72P4Q6eu
        Bl6wBp4DAz1RyjA3dOjQ8eH2BHQgxAu9OnToMCQ8PHxcTEzMxBEpKVMmTJgwbebMGTMWLFgwm0Tnr1mz
        ZtaWLVumPvjgg9MfeeSRWY899tjcrVu3zt+2bdvCp556ahHDYwktu5TxnU4PLaeFV7RipZTSRw+lc8wy
        emTJ9u3blzz66KPLH3rooZX333/f8i1b7lm6efOmxRvWr09bvXpVKvecuyA1dfa0adNmjB07dmhaWpqv
        yVTR4WcC2kNzc3OHlpaWP7DuQ/gRwUQEEUXEEsnESGI8MZWYTaQSi4hlxEpiFbGGWNsKqa8m5Fs6sZiQ
        OTJX/h+ICcQoYggRR8hekUQI0ZPoTPyO+OcCCBkoE3yJXkQY0ZeIJhKI4cQYYhIxg5hHpBEaeSF6O7H+
        F5A+EaIjRIQIlrkzicnEWELWTiRkr35EOBFAdCVuI/5fAmSQiPg9IULEEz0IfyKQEKv0JvoQ/Qmxlmwo
        3hHricikVoi3NEhbvsUTMjaGGEjIGrKWrBlKyB6yl+zZjRAOQr4j0cbzZsLeIEIEMlHDra0QgQJZWIMI
        vhkShjfjl99vnqutp61/854aj5u44Zb/A4ewnYfz0UwFAAAAAElFTkSuQmCC
</value>
  </data>
</root>